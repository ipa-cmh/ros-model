// automatically generated by Xtext
grammar de.fraunhofer.ipa.rossystem.RosSystem with org.eclipse.xtext.common.Terminals

import "http://www.ipa.fraunhofer.de/rossystem" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.ipa.fraunhofer.de/componentInterface" as componentInterface
import "http://www.ipa.fraunhofer.de/ros" as ros
import "http://www.eclipse.org/emf/2003/XMLType" as type


RosSystem returns RosSystem:
	{RosSystem}
	'RosSystem'
	'{'
		'Name' Name=EString
		('RosComponents' '(' (RosComponent+=ComponentInterface ( "," RosComponent+=ComponentInterface)*)? ')' )?
		('TopicConnections' '{' (TopicConnections+=TopicConnection ( "," TopicConnections+=TopicConnection)*)? '}' )?
		('ServiceConnections' '{' (ServiceConnections+=ServiceConnection ( "," ServiceConnections+=ServiceConnection)*)? '}' )?
		('ActionConnections' '{' (ActionConnections+=ActionConnection ( "," ActionConnections+=ActionConnection)*)? '}' )?
		('Parameters' '{' (Parameter+=Parameter ( "," Parameter+=Parameter)*)? '}' )?
		

	'}';

TopicConnection returns TopicConnection:
	'TopicConnection'
	TopicName=EString
	'{'
		'From' '(' From+=[componentInterface::RosPublisher|EString] (',' From+=[componentInterface::RosPublisher|EString])* ')'
		'To' '(' To+=[componentInterface::RosSubscriber|EString] ( ',' To+=[componentInterface::RosSubscriber|EString])* ')'

	'}';

ServiceConnection returns ServiceConnection:
	'ServiceConnection'
	ServiceName=EString
	'{'
		'From' '(' From+=[componentInterface::RosServiceServer|EString] (',' From+=[componentInterface::RosServiceServer|EString])* ')'
		'To' To=[componentInterface::RosServiceClient|EString] 
	'}';

ActionConnection returns ActionConnection:
	'ActionConnection'
	ActionName=EString
	'{'
		'From' From=[componentInterface::RosActionServer|EString]
		'To'  To=[componentInterface::RosActionClient|EString] 

	'}';


EString returns ecore::EString:
	STRING | ID;


//%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

ComponentInterface returns componentInterface::ComponentInterface:
	'ComponentInterface'
	'{'
		'name' name=EString
		('NameSpace' NameSpace=EString)?
		('RosPublishers' '{' rospublisher+=RosPublisher ( "," rospublisher+=RosPublisher)* '}' )?
		('RosSubscribers' '{' rossubscriber+=RosSubscriber ( "," rossubscriber+=RosSubscriber)* '}' )?
		('RosSrvServers' '{' rosserviceserver+=RosServiceServer ( "," rosserviceserver+=RosServiceServer)* '}' )?
		('RosSrvClients' '{' rosserviceclient+=RosServiceClient ( "," rosserviceclient+=RosServiceClient)* '}' )?
		('RosActionServers' '{' rosactionserver+=RosActionServer ( "," rosactionserver+=RosActionServer)* '}' )?
		('RosActionClients' '{' rosactionclient+=RosActionClient ( "," rosactionclient+=RosActionClient)* '}' )?
		('RosParameters' '{' rosparameter+=RosParameter ( "," rosparameter+=RosParameter)* '}' )?
		
	'}';


RosPublisher returns componentInterface::RosPublisher:
	{componentInterface::RosPublisher}
	'RosPublisher'
	(name=EString)?
	'{'
		('ns' ns=EString)?
		'RefPublisher' publisher=[ros::Publisher|EString]
	'}';

RosSubscriber returns componentInterface::RosSubscriber:
	{componentInterface::RosSubscriber}
	'RosSubscriber'
	(name=EString)?
	'{'
		('ns' ns=EString)?
		'RefSubscriber' subscriber=[ros::Subscriber|EString]
	'}';

RosServiceServer returns componentInterface::RosServiceServer:
	{componentInterface::RosServiceServer}
	'RosServiceServer'
	(name=EString)?
	'{'
		('ns' ns=EString)?
		'RefServer' srvserver=[ros::ServiceServer|EString]
	'}';

RosServiceClient returns componentInterface::RosServiceClient:
	{componentInterface::RosServiceClient}
	'RosServiceClient'
	(name=EString)?
	'{'
		('ns' ns=EString)?
		'RefClient' srvclient=[ros::ServiceClient|EString]
	'}';

RosActionServer returns componentInterface::RosActionServer:
	{componentInterface::RosActionServer}
	'RosActionServer'
	(name=EString)?
	'{'
		('ns' ns=EString)?
		'RefServer' actserver=[ros::ActionServer|EString]
	'}';

RosActionClient returns componentInterface::RosActionClient:
	{componentInterface::RosActionClient}
	'RosActionClient'
	(name=EString)?
	'{'
		('ns' ns=EString)?
		'RefClient' actclient=[ros::ActionClient|EString]
	'}';
	
RosParameter returns componentInterface::RosParameter:
	{componentInterface::RosParameter}
	'RosParameter'
	(name=EString)?
	'{'
		('ns' ns=EString)?
		'RefParameter' parameter=[ros::Parameter|EString]
	'}';

//PARAMETERS DEFINITION

ParameterType returns ros::ParameterType:
	ParameterListType | ParameterStructType | ParameterIntegerType | ParameterStringType | ParameterDoubleType | ParameterDateType | ParameterBooleanType | ParameterBase64Type | ParameterAnyType | ParameterArrayType;

ParameterValue returns ros::ParameterValue:
	ParameterAny | ParameterString | ParameterBase64 | ParameterInteger | ParameterDouble | ParameterBoolean | ParameterSequence | ParameterStruct | ParameterDate;


Parameter returns ros::Parameter:
	'Parameter'
	'{'
		'name' name=EString
		('NameSpace' namespace=Namespace)?
		('type' type=ParameterType)?
		('value' value=ParameterValue)?
	'}';

Namespace returns ros::Namespace:
	GlobalNamespace | RelativeNamespace_Impl | PrivateNamespace;


GlobalNamespace returns ros::GlobalNamespace:
	{ros::GlobalNamespace}
	'GlobalNamespace'
	'{'
		('parts' '{' parts+=GraphName ( "," parts+=GraphName)* '}' )?
	'}';

RelativeNamespace_Impl returns ros::RelativeNamespace:
	{ros::RelativeNamespace}
	'RelativeNamespace'
	'{'
		('parts' '{' parts+=GraphName ( "," parts+=GraphName)* '}' )?
	'}';

PrivateNamespace returns ros::PrivateNamespace:
	{ros::PrivateNamespace}
	'PrivateNamespace'
	'{'
		('parts' '{' parts+=GraphName ( "," parts+=GraphName)* '}' )?
	'}';

GraphName returns ros::GraphName:
	'GraphName' ;


ParameterListType returns ros::ParameterListType:
	{ros::ParameterListType}
	'List'
	'{'
		('sequence' '{' sequence+=ParameterType ( "," sequence+=ParameterType)* '}' )?
		('default' default=ParameterSequence)?
	'}';

ParameterStructType returns ros::ParameterStructType:
	{ros::ParameterStructType}
	'Struct'
	'{'
		('parameterstructypetmember' '{' parameterstructypetmember+=ParameterStructTypeMember ( "," parameterstructypetmember+=ParameterStructTypeMember)* '}' )?
	'}';

ParameterIntegerType returns ros::ParameterIntegerType:
	{ros::ParameterIntegerType}
	'Integer'
	'{'
		('default' default=ParameterInteger)?
	'}';

ParameterStringType returns ros::ParameterStringType:
	{ros::ParameterStringType}
	'String'
	'{'
		('default' default=ParameterString)?
	'}';

ParameterDoubleType returns ros::ParameterDoubleType:
	{ros::ParameterDoubleType}
	'Double'
	'{'
		('default' default=ParameterDouble)?
	'}';

ParameterDateType returns ros::ParameterDateType:
	{ros::ParameterDateType}
	'Date'
	'{'
		('default' default=ParameterDate)?
	'}';

ParameterBooleanType returns ros::ParameterBooleanType:
	{ros::ParameterBooleanType}
	'Boolean'
	'{'
		('default' default=ParameterBoolean)?
	'}';

ParameterBase64Type returns ros::ParameterBase64Type:
	{ros::ParameterBase64Type}
	'Base64'
	'{'
		('default' default=ParameterBase64)?
	'}';

ParameterAnyType returns ros::ParameterAnyType:
	{ros::ParameterAnyType}
	'Any'
	'{'
		('default' default=ParameterAny)?
	'}';

ParameterArrayType returns ros::ParameterArrayType:
	'Array'
	'{'
		'type' type=ParameterType
		('default' default=ParameterSequence)?
	'}';

ParameterSequence returns ros::ParameterSequence:
	{ros::ParameterSequence}
		('{' value+=ParameterValue ( "," value+=ParameterValue)* '}' )?
;

ParameterAny returns ros::ParameterAny:
	{ros::ParameterAny}
	'ParameterAny'
	'{'
		('value' value=EString)?
	'}';

ParameterString returns ros::ParameterString:
	value=EString
;

ParameterBase64 returns ros::ParameterBase64:
	value=Base64Binary
;

ParameterInteger returns ros::ParameterInteger:
	value=Eint
;

ParameterDouble returns ros::ParameterDouble:
	value=Double0
;

ParameterBoolean returns ros::ParameterBoolean:
	value=boolean0
;

ParameterStruct returns ros::ParameterStruct:
	{ros::ParameterStruct}
	'ParameterStruct'
	'{'
		('value' '{' value+=ParameterStructMember ( "," value+=ParameterStructMember)* '}' )?
	'}';

ParameterDate returns ros::ParameterDate:
	value=DateTime
;

ParameterStructMember returns ros::ParameterStructMember:
	'ParameterStructMember'
	name=EString
	'{'
		'value' value=ParameterValue
	'}';


ParameterStructTypeMember returns ros::ParameterStructTypeMember:
	'ParameterStructTypeMember'
	name=EString
	'{'
		'type' type=ParameterType
		('default' default=ParameterStruct)?
	'}';


//PARAMETRRS PRIMITIVES TYPES

terminal BOOLEAN: 'true'|'false';
terminal fragment DIGIT: '0'..'9';
terminal DOUBLE returns ecore::EDouble: DECINT (('.' DIGIT*) | (('.' DIGIT*)? ('E'|'e') ('-'|'+')? DECINT)) | INT;  // Use terminal to avoid 'e' turning into a keyword
terminal DECINT: '0' | ('1'..'9' DIGIT*);
terminal fragment SIGN :   '+' | '-' ;


terminal SIGNED_INT:
	'-'* INT*;

terminal fragment HEX_DIGIT: (DIGIT|'a'..'f'|'A'..'F');

terminal HEX returns ecore::EIntegerObject: 
	'0x' HEX_DIGIT*;

terminal fragment BINARY_DIGIT: ('0' | '1');

terminal BINARY returns ecore::EIntegerObject:
	'0b' (BINARY_DIGIT('_')*)*;

	
Base64Binary returns type::Base64Binary:
	BINARY ;


boolean0 returns type::Boolean:
	BOOLEAN
;

Double0 returns type::Double:
	DOUBLE;

Eint returns ecore::EInt:
	INT
;

DateTime returns type::DateTime:
	'DateTime' ;

PackageDependency returns ros::PackageDependency:
	'PackageDependency'
	'{'
		'package' package=[ros::Package|EString]
	'}';

ExternalDependency returns ros::ExternalDependency:
	{ros::ExternalDependency}
	'ExternalDependency'
	name=EString;
